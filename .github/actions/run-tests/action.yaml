name: 'Run Flutter Tests'
description: 'Runs Flutter tests for the project'

inputs:
  working-directory:
    description: 'Working directory'
    required: true

outputs:
  test-results-file:
    value: ${{ steps.set-outputs.outputs.test-results-file }}
    description: 'Path to the test results file'
  coverage-file:
    value: ${{ steps.set-outputs.outputs.coverage-file }}
    description: 'Path to the coverage file'

runs:
  using: 'composite'
  steps:
    - name: Activate very_good_cli
      shell: bash
      run: dart pub global activate very_good_cli 0.25.0

    - name: Run tests
      shell: bash
      run: dart pub global run very_good_cli:very_good test --coverage -- --file-reporter=json:reports/test_report.json
      working-directory: ${{ inputs.working-directory }}

    - name: Setup lcov
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install lcov

    - name: Remove generated files from coverage report
      shell: bash
      run: lcov --remove coverage/lcov.info '**.g.dart' -o coverage/cleaned.info --ignore-errors unused
      working-directory: ${{ inputs.working-directory }}

    - name: Prefix working directory to coverage paths
      shell: bash
      run: |
        awk -v prefix="${{ inputs.working-directory }}" '/^SF:/ { $0 = "SF:" prefix "/" substr($0, 4) } { print }' coverage/cleaned.info > coverage/cleaned.info.tmp && \
        mv coverage/cleaned.info.tmp coverage/cleaned.info
      working-directory: ${{ inputs.working-directory }}

    - name: Prefix working directory to test report paths
      shell: bash
      run: |
        jq --arg prefix "${{ inputs.working-directory }}" \
           'if (.test.name? and (.test.name | test("^/") | not) and (.test.name | test("^file://") | not)) then .test.name = ($prefix + "/" + .test.name) elif (.group.name? and (.group.name | test("^/") | not) and (.group.name | test("^file://") | not)) then .group.name = ($prefix + "/" + .group.name) else . end' \
           reports/test_report.json > reports/test_report.json.tmp && \
        mv reports/test_report.json.tmp reports/test_report.json
      working-directory: ${{ inputs.working-directory }}

    - name: Convert to junit report
      shell: bash
      run: |
        dart pub global activate junitreport
        dart pub global run junitreport:tojunit --input reports/test_report.json --output reports/junit_report.xml
      working-directory: ${{ inputs.working-directory }}

    - name: Set test results file
      shell: bash
      id: set-outputs
      run: |
        echo "test-results-file=${{ inputs.working-directory }}/reports/junit_report.xml" >> $GITHUB_OUTPUT
        echo "coverage-file=${{ inputs.working-directory }}/coverage/cleaned.info" >> $GITHUB_OUTPUT
