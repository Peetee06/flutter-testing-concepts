// Mocks generated by Mockito 5.4.5 from annotations
// in riverpod_app/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i18;
import 'dart:typed_data' as _i26;

import 'package:common/common.dart' as _i22;
import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i19;
import 'package:dio/src/dio.dart' as _i7;
import 'package:dio/src/dio_exception.dart' as _i20;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/headers.dart' as _i8;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/redirect_record.dart' as _i21;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:file/file.dart' as _i10;
import 'package:flutter/widgets.dart' as _i13;
import 'package:flutter_cache_manager/src/cache_managers/base_cache_manager.dart'
    as _i24;
import 'package:flutter_cache_manager/src/result/file_info.dart' as _i11;
import 'package:flutter_cache_manager/src/result/file_response.dart' as _i25;
import 'package:go_router/src/configuration.dart' as _i12;
import 'package:go_router/src/delegate.dart' as _i14;
import 'package:go_router/src/information_provider.dart' as _i15;
import 'package:go_router/src/match.dart' as _i29;
import 'package:go_router/src/parser.dart' as _i16;
import 'package:go_router/src/router.dart' as _i27;
import 'package:go_router/src/state.dart' as _i17;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i28;
import 'package:riverpod_app/data/repositories/concepts_repository.dart'
    as _i23;
import 'package:riverpod_app/data/services/rest_client.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_4<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeDio_5 extends _i1.SmartFake implements _i7.Dio {
  _FakeDio_5(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeInterceptorState_6<T> extends _i1.SmartFake
    implements _i5.InterceptorState<T> {
  _FakeInterceptorState_6(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeRequestOptions_7 extends _i1.SmartFake
    implements _i2.RequestOptions {
  _FakeRequestOptions_7(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeHeaders_8 extends _i1.SmartFake implements _i8.Headers {
  _FakeHeaders_8(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeUri_9 extends _i1.SmartFake implements Uri {
  _FakeUri_9(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeRestClient_10 extends _i1.SmartFake implements _i9.RestClient {
  _FakeRestClient_10(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeFile_11 extends _i1.SmartFake implements _i10.File {
  _FakeFile_11(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeFileInfo_12 extends _i1.SmartFake implements _i11.FileInfo {
  _FakeFileInfo_12(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeRouteConfiguration_13 extends _i1.SmartFake
    implements _i12.RouteConfiguration {
  _FakeRouteConfiguration_13(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeBackButtonDispatcher_14 extends _i1.SmartFake
    implements _i13.BackButtonDispatcher {
  _FakeBackButtonDispatcher_14(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeGoRouterDelegate_15 extends _i1.SmartFake
    implements _i14.GoRouterDelegate {
  _FakeGoRouterDelegate_15(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeGoRouteInformationProvider_16 extends _i1.SmartFake
    implements _i15.GoRouteInformationProvider {
  _FakeGoRouteInformationProvider_16(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeGoRouteInformationParser_17 extends _i1.SmartFake
    implements _i16.GoRouteInformationParser {
  _FakeGoRouteInformationParser_17(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeGoRouterState_18 extends _i1.SmartFake
    implements _i17.GoRouterState {
  _FakeGoRouterState_18(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i7.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_0(this, Invocation.getter(#options)),
      ) as _i2.BaseOptions);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(#options, _options),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(#httpClientAdapter, _httpClientAdapter),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(#transformer, _transformer),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i5.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(#close, [], {#force: force}),
        returnValueForMissingStub: null,
      );

  @override
  _i18.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #head,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {#data: data, #options: options, #cancelToken: cancelToken},
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #headUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #get,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #getUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #postUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #put,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #putUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #patch,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #patchUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {#data: data, #options: options, #cancelToken: cancelToken},
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #deleteUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i19.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i2.FileAccessMode? fileAccessMode = _i2.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [urlPath, savePath],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #fileAccessMode: fileAccessMode,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue: _i18.Future<_i6.Response<dynamic>>.value(
          _FakeResponse_4<dynamic>(
            this,
            Invocation.method(
              #download,
              [urlPath, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<dynamic>>);

  @override
  _i18.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i19.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i2.FileAccessMode? fileAccessMode = _i2.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [uri, savePath],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #fileAccessMode: fileAccessMode,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue: _i18.Future<_i6.Response<dynamic>>.value(
          _FakeResponse_4<dynamic>(
            this,
            Invocation.method(
              #downloadUri,
              [uri, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<dynamic>>);

  @override
  _i18.Future<_i6.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i19.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #request,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i19.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(
              #requestUri,
              [uri],
              {
                #data: data,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i18.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(#fetch, [requestOptions]),
        returnValue: _i18.Future<_i6.Response<T>>.value(
          _FakeResponse_4<T>(
            this,
            Invocation.method(#fetch, [requestOptions]),
          ),
        ),
      ) as _i18.Future<_i6.Response<T>>);

  @override
  _i7.Dio clone({
    _i2.BaseOptions? options,
    _i5.Interceptors? interceptors,
    _i3.HttpClientAdapter? httpClientAdapter,
    _i4.Transformer? transformer,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#clone, [], {
          #options: options,
          #interceptors: interceptors,
          #httpClientAdapter: httpClientAdapter,
          #transformer: transformer,
        }),
        returnValue: _FakeDio_5(
          this,
          Invocation.method(#clone, [], {
            #options: options,
            #interceptors: interceptors,
            #httpClientAdapter: httpClientAdapter,
            #transformer: transformer,
          }),
        ),
      ) as _i7.Dio);
}

/// A class which mocks [ResponseInterceptorHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockResponseInterceptorHandler extends _i1.Mock
    implements _i5.ResponseInterceptorHandler {
  MockResponseInterceptorHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i5.InterceptorState<dynamic>> get future => (super.noSuchMethod(
        Invocation.getter(#future),
        returnValue: _i18.Future<_i5.InterceptorState<dynamic>>.value(
          _FakeInterceptorState_6<dynamic>(
            this,
            Invocation.getter(#future),
          ),
        ),
      ) as _i18.Future<_i5.InterceptorState<dynamic>>);

  @override
  bool get isCompleted =>
      (super.noSuchMethod(Invocation.getter(#isCompleted), returnValue: false)
          as bool);

  @override
  void next(_i6.Response<dynamic>? response) => super.noSuchMethod(
        Invocation.method(#next, [response]),
        returnValueForMissingStub: null,
      );

  @override
  void resolve(_i6.Response<dynamic>? response) => super.noSuchMethod(
        Invocation.method(#resolve, [response]),
        returnValueForMissingStub: null,
      );

  @override
  void reject(
    _i20.DioException? error, [
    bool? callFollowingErrorInterceptor = false,
  ]) =>
      super.noSuchMethod(
        Invocation.method(#reject, [error, callFollowingErrorInterceptor]),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Response].
///
/// See the documentation for Mockito's code generation for more information.
class MockResponse<T> extends _i1.Mock implements _i6.Response<T> {
  MockResponse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set data(T? _data) => super.noSuchMethod(
        Invocation.setter(#data, _data),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RequestOptions get requestOptions => (super.noSuchMethod(
        Invocation.getter(#requestOptions),
        returnValue: _FakeRequestOptions_7(
          this,
          Invocation.getter(#requestOptions),
        ),
      ) as _i2.RequestOptions);

  @override
  set requestOptions(_i2.RequestOptions? _requestOptions) => super.noSuchMethod(
        Invocation.setter(#requestOptions, _requestOptions),
        returnValueForMissingStub: null,
      );

  @override
  set statusCode(int? _statusCode) => super.noSuchMethod(
        Invocation.setter(#statusCode, _statusCode),
        returnValueForMissingStub: null,
      );

  @override
  set statusMessage(String? _statusMessage) => super.noSuchMethod(
        Invocation.setter(#statusMessage, _statusMessage),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Headers get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: _FakeHeaders_8(this, Invocation.getter(#headers)),
      ) as _i8.Headers);

  @override
  set headers(_i8.Headers? _headers) => super.noSuchMethod(
        Invocation.setter(#headers, _headers),
        returnValueForMissingStub: null,
      );

  @override
  bool get isRedirect =>
      (super.noSuchMethod(Invocation.getter(#isRedirect), returnValue: false)
          as bool);

  @override
  set isRedirect(bool? _isRedirect) => super.noSuchMethod(
        Invocation.setter(#isRedirect, _isRedirect),
        returnValueForMissingStub: null,
      );

  @override
  List<_i21.RedirectRecord> get redirects => (super.noSuchMethod(
        Invocation.getter(#redirects),
        returnValue: <_i21.RedirectRecord>[],
      ) as List<_i21.RedirectRecord>);

  @override
  set redirects(List<_i21.RedirectRecord>? _redirects) => super.noSuchMethod(
        Invocation.setter(#redirects, _redirects),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> get extra => (super.noSuchMethod(
        Invocation.getter(#extra),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  set extra(Map<String, dynamic>? _extra) => super.noSuchMethod(
        Invocation.setter(#extra, _extra),
        returnValueForMissingStub: null,
      );

  @override
  Uri get realUri => (super.noSuchMethod(
        Invocation.getter(#realUri),
        returnValue: _FakeUri_9(this, Invocation.getter(#realUri)),
      ) as Uri);
}

/// A class which mocks [RestClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestClient extends _i1.Mock implements _i9.RestClient {
  MockRestClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<List<_i22.Concept>> getConcepts() => (super.noSuchMethod(
        Invocation.method(#getConcepts, []),
        returnValue: _i18.Future<List<_i22.Concept>>.value(
          <_i22.Concept>[],
        ),
      ) as _i18.Future<List<_i22.Concept>>);

  @override
  _i18.Future<List<_i22.Challenge>> getChallenges() => (super.noSuchMethod(
        Invocation.method(#getChallenges, []),
        returnValue: _i18.Future<List<_i22.Challenge>>.value(
          <_i22.Challenge>[],
        ),
      ) as _i18.Future<List<_i22.Challenge>>);
}

/// A class which mocks [ConceptsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockConceptsRepository extends _i1.Mock
    implements _i23.ConceptsRepository {
  MockConceptsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.RestClient get restClient => (super.noSuchMethod(
        Invocation.getter(#restClient),
        returnValue: _FakeRestClient_10(
          this,
          Invocation.getter(#restClient),
        ),
      ) as _i9.RestClient);

  @override
  _i18.Future<List<_i22.Concept>> getConcepts() => (super.noSuchMethod(
        Invocation.method(#getConcepts, []),
        returnValue: _i18.Future<List<_i22.Concept>>.value(
          <_i22.Concept>[],
        ),
      ) as _i18.Future<List<_i22.Concept>>);
}

/// A class which mocks [BaseCacheManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseCacheManager extends _i1.Mock implements _i24.BaseCacheManager {
  MockBaseCacheManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i10.File> getSingleFile(
    String? url, {
    String? key,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSingleFile,
          [url],
          {#key: key, #headers: headers},
        ),
        returnValue: _i18.Future<_i10.File>.value(
          _FakeFile_11(
            this,
            Invocation.method(
              #getSingleFile,
              [url],
              {#key: key, #headers: headers},
            ),
          ),
        ),
      ) as _i18.Future<_i10.File>);

  @override
  _i18.Stream<_i11.FileInfo> getFile(
    String? url, {
    String? key,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getFile, [url], {#key: key, #headers: headers}),
        returnValue: _i18.Stream<_i11.FileInfo>.empty(),
      ) as _i18.Stream<_i11.FileInfo>);

  @override
  _i18.Stream<_i25.FileResponse> getFileStream(
    String? url, {
    String? key,
    Map<String, String>? headers,
    bool? withProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileStream,
          [url],
          {#key: key, #headers: headers, #withProgress: withProgress},
        ),
        returnValue: _i18.Stream<_i25.FileResponse>.empty(),
      ) as _i18.Stream<_i25.FileResponse>);

  @override
  _i18.Future<_i11.FileInfo> downloadFile(
    String? url, {
    String? key,
    Map<String, String>? authHeaders,
    bool? force = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadFile,
          [url],
          {#key: key, #authHeaders: authHeaders, #force: force},
        ),
        returnValue: _i18.Future<_i11.FileInfo>.value(
          _FakeFileInfo_12(
            this,
            Invocation.method(
              #downloadFile,
              [url],
              {#key: key, #authHeaders: authHeaders, #force: force},
            ),
          ),
        ),
      ) as _i18.Future<_i11.FileInfo>);

  @override
  _i18.Future<_i11.FileInfo?> getFileFromCache(
    String? key, {
    bool? ignoreMemCache = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileFromCache,
          [key],
          {#ignoreMemCache: ignoreMemCache},
        ),
        returnValue: _i18.Future<_i11.FileInfo?>.value(),
      ) as _i18.Future<_i11.FileInfo?>);

  @override
  _i18.Future<_i11.FileInfo?> getFileFromMemory(String? key) =>
      (super.noSuchMethod(
        Invocation.method(#getFileFromMemory, [key]),
        returnValue: _i18.Future<_i11.FileInfo?>.value(),
      ) as _i18.Future<_i11.FileInfo?>);

  @override
  _i18.Future<_i10.File> putFile(
    String? url,
    _i26.Uint8List? fileBytes, {
    String? key,
    String? eTag,
    Duration? maxAge = const Duration(days: 30),
    String? fileExtension = 'file',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putFile,
          [url, fileBytes],
          {
            #key: key,
            #eTag: eTag,
            #maxAge: maxAge,
            #fileExtension: fileExtension,
          },
        ),
        returnValue: _i18.Future<_i10.File>.value(
          _FakeFile_11(
            this,
            Invocation.method(
              #putFile,
              [url, fileBytes],
              {
                #key: key,
                #eTag: eTag,
                #maxAge: maxAge,
                #fileExtension: fileExtension,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i10.File>);

  @override
  _i18.Future<_i10.File> putFileStream(
    String? url,
    _i18.Stream<List<int>>? source, {
    String? key,
    String? eTag,
    Duration? maxAge = const Duration(days: 30),
    String? fileExtension = 'file',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putFileStream,
          [url, source],
          {
            #key: key,
            #eTag: eTag,
            #maxAge: maxAge,
            #fileExtension: fileExtension,
          },
        ),
        returnValue: _i18.Future<_i10.File>.value(
          _FakeFile_11(
            this,
            Invocation.method(
              #putFileStream,
              [url, source],
              {
                #key: key,
                #eTag: eTag,
                #maxAge: maxAge,
                #fileExtension: fileExtension,
              },
            ),
          ),
        ),
      ) as _i18.Future<_i10.File>);

  @override
  _i18.Future<void> removeFile(String? key) => (super.noSuchMethod(
        Invocation.method(#removeFile, [key]),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  _i18.Future<void> emptyCache() => (super.noSuchMethod(
        Invocation.method(#emptyCache, []),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  _i18.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(#dispose, []),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);
}

/// A class which mocks [GoRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoRouter extends _i1.Mock implements _i27.GoRouter {
  MockGoRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.RouteConfiguration get configuration => (super.noSuchMethod(
        Invocation.getter(#configuration),
        returnValue: _FakeRouteConfiguration_13(
          this,
          Invocation.getter(#configuration),
        ),
      ) as _i12.RouteConfiguration);

  @override
  set configuration(_i12.RouteConfiguration? _configuration) =>
      super.noSuchMethod(
        Invocation.setter(#configuration, _configuration),
        returnValueForMissingStub: null,
      );

  @override
  _i13.BackButtonDispatcher get backButtonDispatcher => (super.noSuchMethod(
        Invocation.getter(#backButtonDispatcher),
        returnValue: _FakeBackButtonDispatcher_14(
          this,
          Invocation.getter(#backButtonDispatcher),
        ),
      ) as _i13.BackButtonDispatcher);

  @override
  _i14.GoRouterDelegate get routerDelegate => (super.noSuchMethod(
        Invocation.getter(#routerDelegate),
        returnValue: _FakeGoRouterDelegate_15(
          this,
          Invocation.getter(#routerDelegate),
        ),
      ) as _i14.GoRouterDelegate);

  @override
  set routerDelegate(_i14.GoRouterDelegate? _routerDelegate) =>
      super.noSuchMethod(
        Invocation.setter(#routerDelegate, _routerDelegate),
        returnValueForMissingStub: null,
      );

  @override
  _i15.GoRouteInformationProvider get routeInformationProvider =>
      (super.noSuchMethod(
        Invocation.getter(#routeInformationProvider),
        returnValue: _FakeGoRouteInformationProvider_16(
          this,
          Invocation.getter(#routeInformationProvider),
        ),
      ) as _i15.GoRouteInformationProvider);

  @override
  set routeInformationProvider(
    _i15.GoRouteInformationProvider? _routeInformationProvider,
  ) =>
      super.noSuchMethod(
        Invocation.setter(#routeInformationProvider, _routeInformationProvider),
        returnValueForMissingStub: null,
      );

  @override
  _i16.GoRouteInformationParser get routeInformationParser =>
      (super.noSuchMethod(
        Invocation.getter(#routeInformationParser),
        returnValue: _FakeGoRouteInformationParser_17(
          this,
          Invocation.getter(#routeInformationParser),
        ),
      ) as _i16.GoRouteInformationParser);

  @override
  set routeInformationParser(
    _i16.GoRouteInformationParser? _routeInformationParser,
  ) =>
      super.noSuchMethod(
        Invocation.setter(#routeInformationParser, _routeInformationParser),
        returnValueForMissingStub: null,
      );

  @override
  bool get overridePlatformDefaultLocation => (super.noSuchMethod(
        Invocation.getter(#overridePlatformDefaultLocation),
        returnValue: false,
      ) as bool);

  @override
  _i17.GoRouterState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeGoRouterState_18(this, Invocation.getter(#state)),
      ) as _i17.GoRouterState);

  @override
  bool canPop() =>
      (super.noSuchMethod(Invocation.method(#canPop, []), returnValue: false)
          as bool);

  @override
  String namedLocation(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    String? fragment,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedLocation,
          [name],
          {
            #pathParameters: pathParameters,
            #queryParameters: queryParameters,
            #fragment: fragment,
          },
        ),
        returnValue: _i28.dummyValue<String>(
          this,
          Invocation.method(
            #namedLocation,
            [name],
            {
              #pathParameters: pathParameters,
              #queryParameters: queryParameters,
              #fragment: fragment,
            },
          ),
        ),
      ) as String);

  @override
  void go(String? location, {Object? extra}) => super.noSuchMethod(
        Invocation.method(#go, [location], {#extra: extra}),
        returnValueForMissingStub: null,
      );

  @override
  void restore(_i29.RouteMatchList? matchList) => super.noSuchMethod(
        Invocation.method(#restore, [matchList]),
        returnValueForMissingStub: null,
      );

  @override
  void goNamed(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    Object? extra,
    String? fragment,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #goNamed,
          [name],
          {
            #pathParameters: pathParameters,
            #queryParameters: queryParameters,
            #extra: extra,
            #fragment: fragment,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i18.Future<T?> push<T extends Object?>(String? location, {Object? extra}) =>
      (super.noSuchMethod(
        Invocation.method(#push, [location], {#extra: extra}),
        returnValue: _i18.Future<T?>.value(),
      ) as _i18.Future<T?>);

  @override
  _i18.Future<T?> pushNamed<T extends Object?>(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    Object? extra,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamed,
          [name],
          {
            #pathParameters: pathParameters,
            #queryParameters: queryParameters,
            #extra: extra,
          },
        ),
        returnValue: _i18.Future<T?>.value(),
      ) as _i18.Future<T?>);

  @override
  _i18.Future<T?> pushReplacement<T extends Object?>(
    String? location, {
    Object? extra,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#pushReplacement, [location], {#extra: extra}),
        returnValue: _i18.Future<T?>.value(),
      ) as _i18.Future<T?>);

  @override
  _i18.Future<T?> pushReplacementNamed<T extends Object?>(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    Object? extra,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushReplacementNamed,
          [name],
          {
            #pathParameters: pathParameters,
            #queryParameters: queryParameters,
            #extra: extra,
          },
        ),
        returnValue: _i18.Future<T?>.value(),
      ) as _i18.Future<T?>);

  @override
  _i18.Future<T?> replace<T>(String? location, {Object? extra}) =>
      (super.noSuchMethod(
        Invocation.method(#replace, [location], {#extra: extra}),
        returnValue: _i18.Future<T?>.value(),
      ) as _i18.Future<T?>);

  @override
  _i18.Future<T?> replaceNamed<T>(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    Object? extra,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceNamed,
          [name],
          {
            #pathParameters: pathParameters,
            #queryParameters: queryParameters,
            #extra: extra,
          },
        ),
        returnValue: _i18.Future<T?>.value(),
      ) as _i18.Future<T?>);

  @override
  void pop<T extends Object?>([T? result]) => super.noSuchMethod(
        Invocation.method(#pop, [result]),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(#refresh, []),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(#dispose, []),
        returnValueForMissingStub: null,
      );
}
